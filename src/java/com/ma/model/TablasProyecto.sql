/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  Miriam
 * Created: 21/04/2016
 */

select * from conductor

CREATE TABLE AUTOR(
ID_AUTOR INT NOT NULL,
NOMBRE_A VARCHAR2(50)NOT NULL,
CONSTRAINT PK_AUTOR_ID PRIMARY KEY(ID_AUTOR));

CREATE TABLE EDITORIAL(
ID_EDITORIAL INT NOT NULL,
NOMBRE_E VARCHAR2(50)NOT NULL,
 CONSTRAINT PK_ID_EDITORIAL PRIMARY KEY(ID_EDITORIAL));

CREATE TABLE LIBRO (
ID_LIBRO INTEGER NOT NULL,
FID_AUTOR INTEGER NOT NULL, 
FID_EDITORIAL INTEGER NOT NULL,
NOMBRE_L VARCHAR2(120),  
PRECIO FLOAT,
CONSTRAINT PK_ID_LIBRO PRIMARY KEY (ID_LIBRO),
CONSTRAINT FK1_ID_AUTOR FOREIGN KEY (FID_AUTOR) REFERENCES AUTOR (ID_AUTOR),
CONSTRAINT FK2_ID_EDITORIAL FOREIGN KEY (FID_EDITORIAL)REFERENCES EDITORIAL(ID_EDITORIAL));


CREATE TABLE SUCURSAL(
ID_SUCURSAL INTEGER,  
NOMBRE_S VARCHAR2(120),
CONSTRAINT PK_ID_SUCURSAL PRIMARY KEY (ID_SUCURSAL));

CREATE TABLE VENTAS(
ID_VENTAS  INT NOT NULL,
FID_LIBRO  INT NOT NULL,
FID_SUCURSAL INT NOT NULL,
DIA INTEGER,
MES INTEGER, 
ANIO INTEGER,
CONSTRAINT PK1_ID_VENTAS PRIMARY KEY (ID_VENTAS),
CONSTRAINT FK1_ID_LIBRO FOREIGN KEY (FID_LIBRO) REFERENCES LIBRO(ID_LIBRO),
CONSTRAINT FK2_ID_SUCURSAL FOREIGN KEY (FID_SUCURSAL) REFERENCES SUCURSAL(ID_SUCURSAL));

--------INSERTANDO DATOS ----------------
INSERT INTO AUTOR VALUES (100,'Enrique Jose Reinosa');
INSERT INTO AUTOR VALUES (101,'Eduardo Ramirez');
INSERT INTO AUTOR VALUES (102,'Carlos Fuentes');
INSERT INTO AUTOR VALUES (103,'Eduardo Ramirez');
INSERT INTO AUTOR VALUES (104,'Enrique Jose Reinosa');
INSERT INTO AUTOR VALUES (105,'Eduardo Ramirez');
INSERT INTO AUTOR VALUES (106,'Enrique Jose Reinosa');
INSERT INTO AUTOR VALUES (107,'Eduardo Ramirez');
INSERT INTO AUTOR VALUES (108,'Eduardo Ramirez');
INSERT INTO AUTOR VALUES (109,'Enrique Jose Reinosa');
INSERT INTO AUTOR VALUES (110,'Eduardo Ramirez');
select * from AUTOR;

INSERT INTO EDITORIAL VALUES (200,'Alfaomega');
INSERT INTO EDITORIAL VALUES (201,'Oxford University Press');
INSERT INTO EDITORIAL VALUES (202,'Mc Graw Hill');
INSERT INTO EDITORIAL VALUES (203,'Alfaomega');
INSERT INTO EDITORIAL VALUES (204,'Pearson');
INSERT INTO EDITORIAL VALUES (205,'Punto de lectura');
INSERT INTO EDITORIAL VALUES (206,'Empresa Activa');
INSERT INTO EDITORIAL VALUES (207,'De bolsillo');
INSERT INTO EDITORIAL VALUES (208,'Era');
INSERT INTO EDITORIAL VALUES (209,'Limusa');
INSERT INTO EDITORIAL VALUES (210,'Diamante');
select * from EDITORIAL;

INSERT INTO SUCURSAL VALUES (300,'MUNDO E');
INSERT INTO SUCURSAL VALUES (301,'PERINORTE');
insert into sucursal values (302,'plaza las flores');
insert into sucursal values (303,'plaza san marcos');
insert into sucursal values (304,'centralia');
insert into sucursal values (305,'cosmopol');


INSERT INTO LIBRO VALUES(1,100,200,'Cien años de soledad',286.5);
INSERT INTO LIBRO VALUES(2,101,201,'Hornos de Hitler', 189);
INSERT INTO LIBRO VALUES(3,102,206,'Aura', 189);
INSERT INTO LIBRO VALUES(4,101,205,'Pruebas', 293);

delete  FROM LIBRO;
select * from LIBRO;
----SECUENCIAS---



----PROCEDIMIENTOS---------

SET SERVEROUTPUT ON;


CREATE OR REPLACE PROCEDURE ACTUALIZAR_LIBRO(
MY_ID_LIBRO IN NUMBER,
MY_PRECIO IN FLOAT)

AS
BEGIN
UPDATE LIBRO SET PRECIO=MY_PRECIO WHERE ID_LIBRO=MY_ID_LIBRO;
END ACTUALIZAR_LIBRO;

/
--**********PROCEDIMIENTOS GUARDAR LIBRO

CREATE SEQUENCE SEC_LIBRO
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

CREATE OR REPLACE PROCEDURE GUARDAR_LIBRO(
MYG_ID_LIBRO OUT NUMBER,
MY_FID_AUTOR IN NUMBER,
MY_FID_EDITORIAL IN NUMBER,
MY_NOMBRE_L IN VARCHAR2,
MY_PRECIO IN FLOAT)
AS

BEGIN
SELECT SEC_LIBRO.NEXTVAL INTO MYG_ID_LIBRO FROM DUAL;
INSERT INTO LIBRO VALUES(MYG_ID_LIBRO,MY_FID_AUTOR, MY_FID_EDITORIAL,MY_NOMBRE_L,MY_PRECIO);
END GUARDAR_LIBRO;
/
AS
DECLARE
valor integer;
BEGIN
GUARDAR_LIBRO(valor,100,200,'Cien años de soledad',286.5);
GUARDAR_LIBRO(valor,101,201,'Hornos de Hitler',189);
END;

/
--GENERAMOS EL DISPARADOR QUE NOS LIMITA EL PRECIO A QUE SEA SIEMPRE MAYOR QUE EL VIEJO
CREATE OR REPLACE TRIGGER ACTUALIZAR_PRECIO BEFORE UPDATE ON LIBRO FOR EACH ROW

BEGIN
IF:NEW.PRECIO  <:OLD.PRECIO THEN    
RAISE_APPLICATION_ERROR(-20001,'LO SIENTO EL PRECIO DEBE SER MAYOR QUE EL ANTERIOR');
END IF;
END;


CREATE OR REPLACE PROCEDURE BUSCARID_LIBRO(
MYB_ID_LIBRO IN NUMBER)
AS
BEGIN
SELECT  * FROM LIBRO WHERE ID_LIBRO=MYB_ID_LIBRO; 

END BUSCARID_LIBRO;
/

select * from libro;